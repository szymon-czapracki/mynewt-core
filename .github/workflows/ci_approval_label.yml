# .github/workflows/await-label-removal.yml
name: Await label removal

on:
  pull_request:
    types: [opened, ready_for_review]

env:
  LABEL: needs-ci-approval   # <-- change if you want a different label

jobs:
  label-and-wait:
    runs-on: ubuntu-latest
    timeout-minutes: 355               # ~6h hard cap for GitHub-hosted runners
    permissions:
      issues: write                    # required to add/remove PR labels
      contents: read
    env:
      REPO: ${{ github.repository }}
      PR: ${{ github.event.pull_request.number }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Ensure jq is available
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Add label to the PR
        run: |
          # Create the label if it doesn't exist (no-op if present)
          curl -fsS -X POST \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/$REPO/labels" \
            -d "{\"name\":\"$LABEL\",\"color\":\"D4C5F9\"}" || true

          # Add the label to the PR (PRs use the Issues API)
          curl -fsS -X POST \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/$REPO/issues/$PR/labels" \
            -d "{\"labels\":[\"$LABEL\"]}"

      - name: Wait up to 6h for label to be removed
        id: wait
        run: |
          API="https://api.github.com"
          # 6 hours at 20s interval = 1080 loops
          for i in $(seq 1 1080); do
            # stop early if PR is closed
            state=$(curl -fsS -H "Authorization: Bearer $GH_TOKEN" \
                            -H "Accept: application/vnd.github+json" \
                            "$API/repos/$REPO/pulls/$PR" | jq -r '.state')
            if [ "$state" != "open" ]; then
              echo "PR is $state; stopping wait."
              echo "timed_out=false" >> "$GITHUB_OUTPUT"
              exit 0
            fi

            # check label presence
            has_label=$(curl -fsS -H "Authorization: Bearer $GH_TOKEN" \
                                -H "Accept: application/vnd.github+json" \
                                "$API/repos/$REPO/issues/$PR/labels" \
                        | jq -r --arg L "$LABEL" 'map(.name) | index($L) // empty')
            if [ -z "$has_label" ]; then
              echo "Label '$LABEL' removed within window."
              echo "timed_out=false" >> "$GITHUB_OUTPUT"
              exit 0
            fi

            echo "Still labeled; sleeping 20sâ€¦ ($i/1080)"
            sleep 20
          done

          echo "Timed out (~6h) and label still present."
          echo "timed_out=true" >> "$GITHUB_OUTPUT"

      - name: Remove label on timeout
        if: ${{ steps.wait.outputs.timed_out == 'true' }}
        run: |
          # Remove the label from this PR (ignore 404 if already gone)
          curl -sS -X DELETE \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/$REPO/issues/$PR/labels/$(python3 - <<PY

